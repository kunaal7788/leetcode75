Given a binary array nums, you should delete one element from it.
Return the size of the longest non-empty subarray containing only 1's in the resulting array. Return 0 if there is no such subarray.
Example 1:

Input: nums = [1,1,0,1]
Output: 3
Explanation: After deleting the number in position 2, [1,1,1] contains 3 numbers with value of 1's.
Example 2:

Input: nums = [0,1,1,1,0,1,1,0,1]
Output: 5
Explanation: After deleting the number in position 4, [0,1,1,1,1,1,0,1] longest subarray with value of 1's is [1,1,1,1,1].
Solution - 


class Solution:
    def longestSubarray(self, nums: List[int]) -> int:
        res , l, prefix  = 0,0,0
        for r , n in enumerate(nums):
            prefix += n
            if prefix < r - l:
                prefix -= nums[l]
                l+= 1
        return r - l